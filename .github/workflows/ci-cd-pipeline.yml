name: CI/CD Pipeline

on:
  push:
    branches:
      - cicd-pipeline  # Runs when code is pushed to this branch

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      # - name: Build and push backend image
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #   run: |
      #     docker build -t $DOCKER_USERNAME/back:latest ./back
      #     docker push $DOCKER_USERNAME/back:latest

      # - name: Build and push frontend image
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #   run: |
      #     docker build -t $DOCKER_USERNAME/front:latest ./front
      #     docker push $DOCKER_USERNAME/front:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts
      - name: Deploy with Docker Compose
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          ssh $SERVER_USER@$SERVER_IP << 'EOF'
            cd /path/to/app
            git pull origin main
            docker-compose pull
            docker-compose up -d --build
          EOF
